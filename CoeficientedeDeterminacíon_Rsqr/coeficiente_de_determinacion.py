# -*- coding: utf-8 -*-
"""Coeficiente_de_determinacion.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1miucO3-dIGK5HU_0KGYP4kt1RZRoZETB

#Coeficiente de Determinacíon

##Librerias y datos del ejercicio
"""

## Librerias
import numpy as np

## Datos
caract = np.array ([1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 5.5, 6])# Caracateristica(Voltaje) y se combierte en arreglo por la libreria numpy
etiq = np.array ([0.169610272, 0.283395813, 0.386358738, 0.470227872, 0.433281294, 0.600267648, 0.73833898, 0.79031502, 0.877464268, 0.843564462, 0.964438917]) # Etiquetas(Corriente) y se comvierte en arreglo
print(caract)
#El siguiente if retorna la cantidad de datos cargado si los dos vectores son del mismo tamaño
if len(caract) != len(etiq):
   print("Error-Faltan datos")
print( "%d datos cargados" %(len(caract))) # aqui se imprime el numero de elementos dentro del array caract

"""## Calculo de variables"""

# En esta seccion se calculan las variables necesarias para el ejercicio
x_mean = np.mean(caract)
y_mean = np.mean(etiq)
xy_mean = np.mean(caract*etiq)
xsqr_mean = np.mean(np.square(caract))
##print("%.3f" %xsqr_mean)

m = (xy_mean-(x_mean*y_mean))/(xsqr_mean-(np.square(x_mean)))
b = y_mean-(m*x_mean)
print("%.3f" %m)
print(type(m))

# En esta sección se calculan los valores de las variables usadas por la formula de R^2
pre = m*caract+b
print (pre)
CE_recta = np.sum(np.square(etiq-pre))
print(CE_recta)
CE_ymean = np.sum(np.square(etiq-y_mean))
print(CE_recta/CE_ymean)

"""## Calculo del coeficiente de determinación"""

# En esta sección se calculo el valor del coeficiente de determinación del ejercicio
R_sqr = (1-(CE_recta/CE_ymean))*100 
print(R_sqr)